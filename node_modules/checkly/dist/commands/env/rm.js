"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const prompts = require("prompts");
const api = require("../../rest/api");
const core_1 = require("@oclif/core");
const authCommand_1 = require("../authCommand");
class EnvRm extends authCommand_1.AuthCommand {
    async run() {
        var _a;
        const { flags, args } = await this.parse(EnvRm);
        const { force } = flags;
        const envVariableKey = args.key;
        if (!force) {
            const { confirm } = await prompts({
                name: 'confirm',
                type: 'confirm',
                message: `Are you sure you want to delete environment variable ${envVariableKey}?`,
            });
            if (!confirm) {
                this.log('Cancelled. No changes made.');
                return;
            }
        }
        // try to delete env variable catch 404 if env variable does not exist
        try {
            await api.environmentVariables.delete(envVariableKey);
            this.log(`Environment variable ${envVariableKey} deleted.`);
        }
        catch (err) {
            if (((_a = err === null || err === void 0 ? void 0 : err.response) === null || _a === void 0 ? void 0 : _a.status) === 404) {
                throw new Error(`Environment variable ${envVariableKey} does not exist.`);
            }
            else {
                throw new Error(`Failed to delete environment variable. ${err.message}`);
            }
        }
    }
}
exports.default = EnvRm;
EnvRm.hidden = false;
EnvRm.description = 'Remove environment variable via "checkly env rm <key>".';
EnvRm.flags = {
    force: core_1.Flags.boolean({
        char: 'f',
        description: 'Force to skip the confirmation prompt.',
        default: false,
    }),
};
EnvRm.args = {
    key: core_1.Args.string({
        name: 'key',
        required: true,
        description: 'Environment variable key to remove.',
    }),
};
//# sourceMappingURL=rm.js.map