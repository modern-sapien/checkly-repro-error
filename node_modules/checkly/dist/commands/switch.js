"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const chalk = require("chalk");
const core_1 = require("@oclif/core");
const config_1 = require("../services/config");
const api = require("../rest/api");
const authCommand_1 = require("./authCommand");
const login_1 = require("./login");
class Switch extends authCommand_1.AuthCommand {
    async run() {
        const { flags } = await this.parse(Switch);
        const { 'account-id': accountId } = flags;
        if (accountId) {
            try {
                const { data: account } = await api.accounts.get(accountId);
                config_1.default.data.set('accountId', account.id);
                this.log(`Account switched to ${chalk.bold.cyan(accountId)}`);
            }
            catch (e) {
                throw new Error(`Failed to find an account corresponding to account id ${accountId}`);
            }
            this.exit(0);
        }
        try {
            const { data: accounts } = await api.accounts.getAll();
            if (accounts.length === 1) {
                this.warn('Your user is only a member of one account: ' +
                    chalk.bold.cyan(accounts[0].name));
                this.exit(0);
            }
            const selectedAccount = await (0, login_1.selectAccount)(accounts);
            const { id, name } = selectedAccount;
            config_1.default.data.set('accountId', id);
            config_1.default.data.set('accountName', name);
            this.log(`Account switched to ${chalk.bold.cyan(name)}`);
        }
        catch (err) {
            throw new Error(`Failed to switch account. ${err.message}`);
        }
    }
}
exports.default = Switch;
Switch.hidden = false;
Switch.description = 'Switch user account.';
Switch.flags = {
    'account-id': core_1.Flags.string({
        char: 'a',
        name: 'accountId',
        description: 'The id of the account you want to switch to.',
    }),
};
//# sourceMappingURL=switch.js.map