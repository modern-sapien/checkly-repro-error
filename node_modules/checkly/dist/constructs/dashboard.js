"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Dashboard = void 0;
const fs = require("fs");
const construct_1 = require("./construct");
const project_1 = require("./project");
const path = require("path");
/**
 * Creates a Dashboard
 *
 * @remarks
 *
 * This class make use of the Dashboard endpoints.
 */
class Dashboard extends construct_1.Construct {
    /**
     * Constructs the Dashboard instance
     *
     * @param logicalId unique project-scoped resource name identification
     * @param props dashboard configuration properties
     *
     * {@link https://checklyhq.com/docs/cli/constructs/#dashboard Read more in the docs}
     */
    constructor(logicalId, props) {
        super(Dashboard.__checklyType, logicalId);
        this.tags = props.tags;
        this.customUrl = props.customUrl;
        this.customDomain = props.customDomain;
        this.logo = props.logo;
        this.favicon = props.favicon;
        this.link = props.link;
        this.header = props.header;
        this.description = props.description;
        this.width = props.width;
        this.refreshRate = props.refreshRate;
        this.paginate = props.paginate;
        this.paginationRate = props.paginationRate;
        this.checksPerPage = props.checksPerPage;
        this.useTagsAndOperator = props.useTagsAndOperator;
        this.hideTags = props.hideTags;
        this.enableIncidents = props.enableIncidents;
        this.expandChecks = props.expandChecks;
        this.showHeader = props.showHeader;
        this.isPrivate = props.isPrivate;
        this.showP95 = props.showP95;
        this.showP99 = props.showP99;
        if (!props.customUrl && !props.customDomain) {
            throw new Error('Either a "customUrl" or "customDomain" must be specified.');
        }
        if (props.customCSS) {
            if ('entrypoint' in props.customCSS) {
                const entrypoint = props.customCSS.entrypoint;
                let absoluteEntrypoint = null;
                if (path.isAbsolute(entrypoint)) {
                    absoluteEntrypoint = entrypoint;
                }
                else {
                    if (!project_1.Session.checkFileAbsolutePath) {
                        throw new Error('You cannot use relative paths without the checkFileAbsolutePath in session');
                    }
                    absoluteEntrypoint = path.join(path.dirname(project_1.Session.checkFileAbsolutePath), entrypoint);
                }
                if (!fs.existsSync(absoluteEntrypoint)) {
                    throw new Error(`Unrecognized CSS code or file not found for 'customCSS' property in dashboard '${logicalId}'.`);
                }
                this.customCSS = String(fs.readFileSync(absoluteEntrypoint));
            }
            else if ('content' in props.customCSS) {
                this.customCSS = props.customCSS.content;
            }
        }
        project_1.Session.registerConstruct(this);
    }
    synthesize() {
        return {
            tags: this.tags,
            customUrl: this.customUrl,
            customDomain: this.customDomain,
            logo: this.logo,
            favicon: this.favicon,
            link: this.link,
            header: this.header,
            description: this.description,
            width: this.width,
            refreshRate: this.refreshRate,
            paginate: this.paginate,
            paginationRate: this.paginationRate,
            checksPerPage: this.checksPerPage,
            useTagsAndOperator: this.useTagsAndOperator,
            hideTags: this.hideTags,
            enableIncidents: this.enableIncidents,
            expandChecks: this.expandChecks,
            showHeader: this.showHeader,
            customCSS: this.customCSS,
            isPrivate: this.isPrivate,
            showP95: this.showP95,
            showP99: this.showP99,
        };
    }
}
exports.Dashboard = Dashboard;
Dashboard.__checklyType = 'dashboard';
//# sourceMappingURL=dashboard.js.map